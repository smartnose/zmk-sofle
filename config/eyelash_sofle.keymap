#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <14 28 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&lt 3 EQUAL      &kp N1                   &kp N2                    &mt LS(LEFT_COMMAND) N3  &mt LEFT_COMMAND KP_NUMBER_4  &mt LEFT_ALT KP_NUMBER_5      &kp UP_ARROW     &mt RIGHT_ALT KP_NUMBER_6    &mt RIGHT_COMMAND KP_N7      &mt RS(RIGHT_COMMAND) KP_N8  &kp N9                   &kp N0                    &lt 3 MINUS
&kp CAPSLOCK     &kp Q                    &kp W                     &kp E                    &mt LS(LEFT_CONTROL) R        &mt LA(LEFT_CONTROL) T        &kp DOWN_ARROW   &mt RC(RIGHT_ALT) Y          &mt RS(RIGHT_CONTROL) U      &kp I                        &kp O                    &kp P                     &kp BSLH
&kp AT_SIGN      &kp A                    &kp S                     &kp D                    &kp F                         &mt LS(LA(LEFT_CONTROL)) G    &kp LEFT_ARROW   &mt RA(RS(RIGHT_CONTROL)) H  &kp J                        &kp K                        &kp L                    &kp SEMI                  &kp APOS
&kp LS(LC(TAB))  &kp Z                    &kp X                     &kp C                    &kp V                         &kp B                         &kp RIGHT_ARROW  &kp N                        &kp M                        &kp COMMA                    &kp DOT                  &kp FSLH                  &lt 3 LC(TAB)
&kp C_MUTE       &mt LEFT_COMMAND ESCAPE  &mt LEFT_SHIFT AMPERSAND  &lt 1 HASH               &lt 2 SPACE                   &mt LEFT_CONTROL BACKSPACE    &kp C_MUTE       &mt RIGHT_CONTROL TAB        &mt LC(RIGHT_COMMAND) ENTER  &lt 1 PERCENT                &mt RIGHT_SHIFT PAGE_UP  &mt RIGHT_COMMAND DELETE
            >;

            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp LA(GRAVE)  &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&kp GRAVE      &kp EXCLAMATION  &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp LESS_THAN     &kp GREATER_THAN
&trans         &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans         &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE     &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans  &trans           &trans         &trans                &trans                 &trans       &trans  &trans        &trans        &trans        &trans      &trans        &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE     &trans  &kp N7        &kp N8        &kp N9        &kp MINUS   &kp SLASH     &trans
&trans  &trans           &kp DOLLAR     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp CARET    &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS    &kp ASTERISK  &trans
&trans  &kp PERCENT      &kp HASH       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE    &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &kp EQUAL     &trans
&trans  &kp AMPERSAND    &kp LESS_THAN  &kp GREATER_THAN      &trans                 &trans       &trans  &trans        &trans        &trans        &kp N0      &trans
            >;

            display-name = "layer2";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6      &kp F7          &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &bt BT_CLR  &bt BT_CLR_ALL  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans      &trans          &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans      &trans          &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans      &trans          &trans      &trans     &trans
            >;

            display-name = "layer3";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "layer4";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
